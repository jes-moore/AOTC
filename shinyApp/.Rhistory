x
runApp()
runApp()
runApp()
?candlestick
?dyCandlestick
runApp()
runApp()
shiny::runApp()
install.packages('shiny')
library(shiny)
runApp()
library(data.table)
library(data.table)
library(data.table)
library(data.table)
library(data.table)
library(quantmod)
library(quantmod)
library(quantmod)
library(quantmod)
install.packages('quantmod')
library(quantmod)
library(ggplot2)
library(dplyr)
library(grid)
library(TTR)
library(scales)
library(lubridate)
library(shiny)
library(DT)
library(ggvis)
library(dygraphs)
library(rCharts)
library(curl)
?install.packages
install.packages(c('xts','TTR','scales','ggvis','dygraphs','rCharts')
)
install.packages(c("xts", "TTR", "scales", "ggvis", "dygraphs", "rCharts"))
library(data.table)
library(quantmod)
library(ggplot2)
library(dplyr)
library(grid)
library(TTR)
library(scales)
library(lubridate)
library(shiny)
library(DT)
library(ggvis)
library(dygraphs)
library(rCharts)
library(curl)
install.packages(c('lubridate'))
library(lubridate)
library(data.table)
library(quantmod)
install.packages('quantmod')
library(quantmod)
install.packages('installr')
library(updateR)
library(updater)
library(installr)
updateR()
install.packages(c("assertthat", "curl", "data.table", "DBI", "devtools", "DiagrammeR", "digest", "htmltools", "irlba", "jsonlite", "knitr", "markdown", "memoise", "R6", "Rcpp", "stringi", "stringr", "tensorflow", "tibble", "viridis", "XML"))
install.packages('data.table')
library(data.table)
install.packages('ggplot2')
install.packages('dplyr')
install.packages('lubridate')
install.packages('shiny')
install.packages('DT')
install.packages('dygraphs')
install.packages('curl')
install.packages('zoo')
library(quantmod)
install.packages('RMySQL')
install.packages('curl')
install.packages('xts')
install.packages("xts")
install.packages('reshape2')
library(zoo)
library(zoo)
library(data.table)
library(quantmod)
library(dplyr)
library(lubridate)
library(shiny)
library(DT)
library(reshape2)
library(xts)
library(curl)
library(dygraphs)
library(RMySQL)
runApp()
install.packages('dplyr')
runApp()
install.packages('rCharts')
runApp()
install.packages('Quandl')
runApp()
install.packages('XML')
runApp()
install.packages('feedeR')
runApp()
<<<<<<< HEAD
shiny::runApp
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(finreportr)
AnnualReports('fb')
GetBalanceSheet("FB")
GetBalanceSheet("FB",2016)
GetBalanceSheet("FB",2017)
GetBalanceSheet("FB",c(2017,2016,2015,2014)
GetBalanceSheet("FB", 2017)
GetBalanceSheet("FB",c(2017,2016,2015,2014))
install.packages('tidyquant')
library(tidyquant)
my.ticker <- 'AAPL'
my.df <- tq_get(my.ticker,get = "stock.prices")
print(tail(my.df))
df.key.ratios <- tq_get("AAPL",get = "key.ratios")
df.key.ratios
df.key.ratios$data[[2]]
df.profitability <- df.key.ratios$data[[2]]
View(df.profitability)
=======
shiny::runaa
shiny::runApp()
>>>>>>> 90b309479cc3dabf0e1795f74f8db7013b98738b
library(tidyquant)
install.packages('tidyquant')
library(tidyquant)
my.ticker <- 'AAPL'
print(tail(my.df))
runApp()
library(shiny)
runApp()
rm(list=ls())
my.ticker <- 'FB'
df.key.ratios <- tq_get("FB",get = "key.ratios")
library(tidyquant)
?tq_get
df.key.ratios <- tq_get("FB",get = "key.ratios")
df.key.ratios <- tq_get("FB",get = "financials")
View(df.key.ratios)
df.key.ratios$quarter
df.key.ratios
df.key.ratios$type
df.key.ratios <- tq_get("FB",get = "key.ratios")
df.key.ratios <- tq_get("AAPL",get = "key.ratios")
df.profitability <- df.key.ratios$data[[2]]
df.key.ratios <- tq_get("AAPL",get = "key.ratios")
devtools::install_github("joshuaulrich/quantmod", ref="157_yahoo_502")
install.packages('quantmod')
install.packages("quantmod")
df.key.ratios <- tq_get("AAPL",get = "key.ratios")
library(tidyquant)
my.ticker <- 'FB'
df.key.ratios <- tq_get("AAPL",get = "key.ratios")
df.key.ratios
df.key.ratios[1]
df.key.ratios[2]
df.key.ratios$data
df.key.ratios$data[1]
df.key.ratios <- tq_get("AAPL",get = "key.ratios")
df.key.ratios
df.key.ratios <- df.key.ratios$data[[2]]
df.key.ratios
View(df.key.ratios)
df.key.ratios
df.key.ratios
library(tidyquant)
my.ticker <- 'FB'
df.key.ratios <- tq_get("AAPL",get = "key.ratios")
df.financials <- tq_get(ticker,get = 'financials')
?tq_get
ticker <- 'FB'
df.key.ratios <- tq_get(ticker,get = "key.ratios")
df.financials <- tq_get(ticker,get = 'financials')
df.financials
df.stats <- tq_get(ticker,get='key.ratios')
head(df.stats)
df.stats$data[1]
financials <- df.stats$data[1]
financials <- df.stats$data[[1]]
View(financials)
df.stats <- tq_get(ticker,get='key.ratios')
df.stats
df.financials <- tq_get(ticker,get = 'financials')
df.financials
df.financials$quarter[[1]
]
df.stats <- tq_get(ticker,get='key.ratios')
financials <- df.stats$data[[1]]
df.financials <- tq_get(ticker,get = 'financials')
df.financials
df.Qfinancials <- df.financials$quarter
df.Qfinancials <- df.financials$quarter
df.Yfinancials <- df.financials$annual
df.Qfinancials
df.financials
df.Qfinancials
df.Qfinancials[[1]]
df.Qfinancials[[2]]
df.Qfinancials[[3]]
incomeStatement <- df.Qfinancials[[3]]
incomeStatement
View(incomeStatement)
incomeStatement <- na.exclude(incomeStatement)
YincomeStatement <- df.Yfinancials[[3]]
View(YincomeStatement)
unique(YincomeStatement$category)
YincomeStatement <- na.exclude(YincomeStatement)
View(YincomeStatement)
YincomeStatement <- df.Yfinancials[[3]]
YincomeStatement <- na.exclude(df.Yfinancials[[3]])
View(YincomeStatement)
YincomeStatement <- na.exclude(df.Yfinancials[[3]])
QincomeStatement <- na.exclude(df.Yfinancials[[3]])
View(YincomeStatement)
finSum <- data.frame(Year = integer(),Revenue=integer(),'Operating Income' =integer(),
'Net Profit'=integer(),EPS=integer())
YfinSum <- data.frame(Year = integer(),Revenue=integer(),'Operating Income' =integer(),
'Net Profit'=integer(),EPS=integer())
YfinSum
YfinSum <- data.frame(Year = integer(),Revenue=integer(),"Operating Income" =integer(),
'Net Profit'=integer(),EPS=integer())
YfinSum
YfinSum <- data.frame(Year = integer(),Revenue=integer(),"Operating_Income" =integer(),
'Net Profit'=integer(),EPS=integer())
YfinSum
YfinSum <- data.frame(Year = integer(),Revenue=integer(),`Operating Income` =integer(),
'Net Profit'=integer(),EPS=integer())
YfinSum
colnmaes(YfinSum) <- c('Year','Revenue','Operating Income','Net Profit','EPS')
colnames(YfinSum) <- c('Year','Revenue','Operating Income','Net Profit','EPS')
YfinSum
YRevenue <- YincomeStatement[YincomeStatement$category == 'Revenue']
YRevenue <- YincomeStatement[YincomeStatement$category == 'Revenue',]
YRevenue
YRevenue <- YincomeStatement[YincomeStatement$category == 'Revenue',3:4]
YRevenue
colnames(YRevenue) <- c('Date','Revenue')
YRevenue
YOpIncome <- YincomeStatement[YincomeStatement$category == 'Operating Income',3:4]
YOpIncome <- YincomeStatement[YincomeStatement$category == 'Operating Income',3:4]
colnames(YOpIncome) <- c('Date','Operating Income')
YOpIncome
YNetProfit <- YincomeStatement[YincomeStatement$category == ' Net Profit']
YNetProfit <- YincomeStatement[YincomeStatement$category == ' Net Profit',3:4]
YNetProfit
unique(YincomeStatement$category)
YNetProfit <- YincomeStatement[YincomeStatement$category == 'Net Income',3:4]
YNetProfit
colnames(YOpIncome) <- c('Date','Net Profit')
Yeps <- YincomeStatement[YincomeStatement$category == 'Diluted Normalized EPS',3:4]
YincomeStatement
View(YincomeStatement)
df.stats
df.stats$data
check <- df.stats$data[[1]]
View(check)
check <- df.stats$data[[2]]
View(check)
check <- df.stats$data[[3]]
View(check)
check <- df.stats$data[[4]]
View(check)
check <- df.stats$data[[5]]
View(check)
df.financials
df.financials$annual[[1]]
check <- df.financials$annual[[1]]
check <- df.financials$annual[[2]]
check <- df.financials$annual[[3]]
check <- df.financials$annual
check <- df.financials$annual[[4]]
df.financials$annual
df.financials
df.key.ratios <- tq_get(ticker,get = "key.ratios")
df.key.ratios
df.key.ratios[[1]
df.key.ratios$data[[1]]
df.key.ratios$data[[2]]
df.key.ratios$data[[3]]
df.key.ratios$data[[4]]
?tidyquant
dividends <- tq_get('ticker',get='dividends')
dividends <- tq_get(get='economic.data'
)
dividends <- tq_get(ticker,get='economic.data')
colnames(Yeps) <- c('Date','EPS')
YincomeStatement
View(YincomeStatement)
financials
df.key.ratios <- tq_get(ticker,get = "key.ratios")
df.key.ratios
df.key.ratios$data[[4]]
check <- df.key.ratios$data[[4]]
View(check)
check <- df.key.ratios$data[[1]]
check <- df.key.ratios$data[[2]]
View(check)
check <- df.key.ratios$data[[1]]
check <- df.key.ratios$data[[2]]
check <- df.key.ratios$data[[1]]
View(check)
Yeps
df.key.ratios
check <- df.key.ratios$data[[5]]
View(check)
check <- df.key.ratios$data[[6]]
View(check)
df.kernel()
df.key.ratios
check <- df.key.ratios$data[[4]]
View(check)
df.kernel()
df.key.ratios
check <- df.key.ratios$data[[1]]
view(check)
View(check)
check <- df.key.ratios$data[[2]]
View(check)
check <- df.key.ratios$data[[1]]
df.stats <- tq_get(ticker,get='key.stats')
df.stats
df.stats
df.stats$EPS
df.stats$PE.Ratio
df.stats <- tq_get(ticker,get='key.stats',from = '2014-01-01')
df.stats
prices <- tq_get(ticker,'stock.price')
prices
Yeps
View(prices)
Ype <- merge(Yeps,prices,by = 'Date')
Ype <- merge(Yeps,prices,by = 1)
Ype
yeps
Yeps
df.key.ratios
df.key.ratios[[7]]
df.key.ratios$data[[7]]
Ype <- df.key.ratios$data[[7]]
Ype
Ype <- na.exclude(Ype[Ype$group == 'Price to Earnings',])
ype
Ype
Ype <- df.key.ratios$data[[7]]
Ype <- na.exclude(Ype[Ype$group == 'Price to Earnings',])
Ype
Ype <- df.key.ratios$data[[7]]
Ype
Ype <- df.key.ratios$data[[7]]
Ype <- na.exclude(Ype[Ype$category == 'Price to Earnings',])
Ype
Ype <- na.exclude(Ype[Ype$category == 'Price to Earnings',c(4,5)])
Ype
colnames(Ype) <- c('Date','P/E')
valuations <- df.key.ratios$data
valuations <- df.key.ratios$data[[1]]
View(valuations)
valuations <- df.key.ratios$data[[7]]
valuations <- df.key.ratios$data[[6]]
View(valuations)
?Reduce
merge.all <- function(by, ...) {
frames <- list(...)
return (Reduce(function(x, y) {merge(x, y, by = by, all = TRUE)}, frames))
}  # end merge.all
merge.all(by = "Date", YRevenue, YOpIncome, YNetProfit,Yeps,Ype)
YRevenue
merge.all(by = 1, YRevenue, YOpIncome, YNetProfit,Yeps,Ype)
merge.all(by = 1, YRevenue, YOpIncome, YNetProfit,Yeps)
Ype
?grep
gsub('30',Ype$Date)
gsub(pattern = '30',x = Ype$Date,replacement = '31')
Ype$Date <- gsub(pattern = '30',x = Ype$Date,replacement = '31')
merge.all <- function(by, ...) {
frames <- list(...)
return (Reduce(function(x, y) {merge(x, y, by = by, all = TRUE)}, frames))
}  # end merge.all
finIndicators <- merge.all(by = 1, YRevenue, YOpIncome, YNetProfit,Yeps,Ype)
finIndicators
Ype$Date <- as.Date(gsub(pattern = '30',x = Ype$Date,replacement = '31'))
merge.all <- function(by, ...) {
frames <- list(...)
return (Reduce(function(x, y) {merge(x, y, by = by, all = TRUE)}, frames))
}  # end merge.all
finIndicators <- merge.all(by = 1, YRevenue, YOpIncome, YNetProfit,Yeps,Ype)
finIndicators
library(tidyquant)
ticker <- 'AAPL'
#Stock Prices
prices <- tq_get(ticker,'stock.price')
#Ratios
df.key.ratios <- tq_get(ticker,get = "key.ratios")
#Statistics (EPS,P/E,etc)
df.stats <- tq_get(ticker,get='key.stats',from = '2014-01-01')
#Financials
df.financials <- tq_get(ticker,get = 'financials')
df.Qfinancials <- df.financials$quarter
df.Yfinancials <- df.financials$annual
#Key Financial Indicators
YRevenue <- YincomeStatement[YincomeStatement$category == 'Revenue',3:4]
colnames(YRevenue) <- c('Date','Revenue')
YOpIncome <- YincomeStatement[YincomeStatement$category == 'Operating Income',3:4]
colnames(YOpIncome) <- c('Date','Operating Income')
YNetProfit <- YincomeStatement[YincomeStatement$category == 'Net Income',3:4]
colnames(YOpIncome) <- c('Date','Net Profit')
Yeps <- YincomeStatement[YincomeStatement$category == 'Diluted Normalized EPS',3:4]
colnames(Yeps) <- c('Date','EPS')
Ype <- df.key.ratios$data[[7]]
Ype <- na.exclude(Ype[Ype$category == 'Price to Earnings',c(4,5)])
colnames(Ype) <- c('Date','P/E')
Ype$Date <- as.Date(gsub(pattern = '30',x = Ype$Date,replacement = '31'))
#QincomeStatement <- na.exclude(df.Yfinancials[[3]])
merge.all <- function(by, ...) {
frames <- list(...)
return (Reduce(function(x, y) {merge(x, y, by = by, all = TRUE)}, frames))
}  # end merge.all
finIndicators <- merge.all(by = 1, YRevenue, YOpIncome, YNetProfit,Yeps,Ype)
finIndicators
finIndicators <- na.exclude(merge.all(by = 1, YRevenue, YOpIncome, YNetProfit,Yeps,Ype))
finIndicators
finIndicators <-merge.all(by = 1, YRevenue, YOpIncome, YNetProfit,Yeps,Ype)[-3:-1,]
finIndicators
merge.all <- function(by, ...) {
frames <- list(...)
return (Reduce(function(x, y) {merge(x, y, by = by, all = TRUE)}, frames))
}  # end merge.all
finIndicators <-merge.all(by = 1, YRevenue, YOpIncome, YNetProfit,Yeps,Ype)[-3:-1,]
finIndicators
finIndicators <-tail(merge.all(by = 1, YRevenue, YOpIncome, YNetProfit,Yeps,Ype),3)
finIndicators
library(tidyquant)
ticker <- 'AAPL'
#Stock Prices
prices <- tq_get(ticker,'stock.price')
#Ratios
df.key.ratios <- tq_get(ticker,get = "key.ratios")
#Statistics (EPS,P/E,etc)
df.stats <- tq_get(ticker,get='key.stats',from = '2014-01-01')
#Financials
df.financials <- tq_get(ticker,get = 'financials')
df.Qfinancials <- df.financials$quarter
df.Yfinancials <- df.financials$annual
#Key Financial Indicators
YRevenue <- YincomeStatement[YincomeStatement$category == 'Revenue',3:4]
colnames(YRevenue) <- c('Date','Revenue')
YOpIncome <- YincomeStatement[YincomeStatement$category == 'Operating Income',3:4]
colnames(YOpIncome) <- c('Date','Operating Income')
YNetProfit <- YincomeStatement[YincomeStatement$category == 'Net Income',3:4]
colnames(YOpIncome) <- c('Date','Net Profit')
Yeps <- YincomeStatement[YincomeStatement$category == 'Diluted Normalized EPS',3:4]
colnames(Yeps) <- c('Date','EPS')
Ype <- df.key.ratios$data[[7]]
Ype <- na.exclude(Ype[Ype$category == 'Price to Earnings',c(4,5)])
colnames(Ype) <- c('Date','P/E')
Ype$Date <- as.Date(gsub(pattern = '30',x = Ype$Date,replacement = '31'))
#QincomeStatement <- na.exclude(df.Yfinancials[[3]])
merge.all <- function(by, ...) {
frames <- list(...)
return (Reduce(function(x, y) {merge(x, y, by = by, all = TRUE)}, frames))
}  # end merge.all
finIndicators <-tail(merge.all(by = 1, YRevenue, YOpIncome, YNetProfit,Yeps,Ype),3)
finIndicators
YincomeStatement <- df.Yfinancials
YincomeStatement
df.financials
df.financials <- tq_get(ticker,get = 'financials')
df.financials
YincomeStatement <- df.Yfinancials[[3]]
QincomeStatement <- df.Qfinancials[[3]]
#Financials Yearly
df.Yfinancials <- df.financials$annual
YincomeStatement <- df.Yfinancials[[3]]
YRevenue <- YincomeStatement[YincomeStatement$category == 'Revenue',3:4]
colnames(YRevenue) <- c('Date','Revenue')
YOpIncome <- YincomeStatement[YincomeStatement$category == 'Operating Income',3:4]
colnames(YOpIncome) <- c('Date','Operating Income')
YNetProfit <- YincomeStatement[YincomeStatement$category == 'Net Income',3:4]
colnames(YOpIncome) <- c('Date','Net Profit')
Yeps <- YincomeStatement[YincomeStatement$category == 'Diluted Normalized EPS',3:4]
colnames(Yeps) <- c('Date','EPS')
Ype <- df.key.ratios$data[[7]]
Ype <- na.exclude(Ype[Ype$category == 'Price to Earnings',c(4,5)])
colnames(Ype) <- c('Date','P/E')
Ype$Date <- as.Date(gsub(pattern = '30',x = Ype$Date,replacement = '31'))
#QincomeStatement <- na.exclude(df.Yfinancials[[3]])
merge.all <- function(by, ...) {
frames <- list(...)
return (Reduce(function(x, y) {merge(x, y, by = by, all = TRUE)}, frames))
}  # end merge.all
YfinIndicators <-tail(merge.all(by = 1, YRevenue, YOpIncome, YNetProfit,Yeps,Ype),3)
